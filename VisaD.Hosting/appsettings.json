{
  "DbConfiguration": {
    "ConnectionString": "connection string to operative db",
    "LogConnectionString": "connection string to log db",
    "Descriptors": [
      {
        "Id": 1,
        "ConnectionString": "connection string to blob db",
        "Provider": "type of blob db (typically Npgsql)",
        "IsOperative": true
      }
    ]
  },
  "UserCredentials": [
    {
      "Id": 1,
      "Username": "demo username",
      "Password": "demo password",
      "OrganizationName": "demo organization name (do not fill it in if the user is admin)"
    }
  ],
  "EmsConfiguration": {
    "EmsUrl": "ems url",
    "systemUserName": "username to authenticate",
    "systemUserPassword": "user password"
  },
  "AuthConfiguration": {
    "Audience": "audience for jwt token (usually the address of the system)",
    "Issuer": "issuer for jwt token (usually the address of the system)",
    "SecretKey": "random 256-bit secret (32 characters long)",
    "ValidHours": 12
  },
  "EmailConfiguration": {
    "FromAddress": "email address",
    "FromName": "project name",
    "JobPeriod": "period of sending emails",
    "JobLimit": "how many emails to send",
    "JobEnabled": "is open or not",
    "SmtpHost": "smtp host name",
    "SmtpPort": "smtp port",
    "SmtpUseSsl": "true or false for ssl",
    "SmtpShouldAuthenticate": "true or false for authenticate",
    "SmtpUsername": "username of smtp",
    "SmtpPassword": "password of smtp"
  },
  "ApplicationFileConfiguration": {
    "previewUrlTemplate": "url path for QR code"
  },
  "RndConsumerConfiguration": {
    "IsConsumerEnabled": "self-explanatory",
    "Host": "address of rabbitmq server",
    "Port": 5672,
    "Username": "rabbitmq user",
    "Password": "rabbitmq password",
    "RndOrganizationUpdateExchange": "name of exchange for institutions",
    "RndSpecialityUpdateExchange": "name of exchange for specialities",
    "HeartbeatTimeout": 20,
    "NetworkRecoveryInterval": 10,
    "SslEnabled": false,
    "SslServerName": "",
    "SslCertPath": "",
    "SslCertPassphrase": ""
  },
  "ReCaptchaConfiguration": {
    "Secret": "secret, placed in recaptcha account",
    "ApiUrl": "url to request google recaptcha"
  }
}